spring:
  application:
    name: seckill
  # 静态资源处理
  web:
    resources:
      cache:
        cache control:
          # 缓存时间 s
          max-age: 3600
      # 启动静态资源处理，默认开启
      add-mappings: true
      chain:
        cache: true
        enabled: true
        compressed: true
      static-locations: classpath:/static/

  # 关闭 thymeleaf 缓存
  thymeleaf:
    cache: false

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql 8.0 有 'cj'
    url: jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 185530
    hikari: # 不用 druid，hikari 号称最快连接池
      # 连接池名称
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认 600000 (10分钟)
      idle-timeout: 1800000
      # 最大连接数，默认 10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0 表示永久存货，默认 1800000（30分钟）
      max-lifetime: 1800000
      # 连接超时时间，默认 30000 （30秒）
      connection-timeout: 30000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1


  redis:
    host: 127.0.0.1
    port: 6379
    # 默认使用的数据库索引
    database: 0
    # 连接超时时间
    timeout: 10000ms
    # 配置连接池
    lettuce:
      pool:
        # 最大连接数
        max-active: 8
        # 最大连接等待时间
        max-wait: 10000ms
        # 最大空闲连接数
        max-idle: 200
        # 最小空闲连接数
        min-idle: 5

  rabbitmq:
    host: localhost
    username: guest
    password: guest
    virtual-host: /
    port: 5672
    listener:
      simple:
        concurrency: 10
        max-concurrency: 10
        prefetch: 1
        auto-startup: true
        default-requeue-rejected: true
    template:
      retry:
        enabled: true
        initial-interval: 1000ms
        max-attempts: 3
        max-interval: 10000ms
        multiplier: 1




mybatis-plus:
  # 配置 Mapper.xml 配置文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置 Mybatis 数据返回类型的别名（默认别名是类名）
  type-aliases-package: com.xxxx.seckill.pojo


# MyBatis SQL 打印（方法接口所在包，不是 Mapper.xml 所在包）
logging:
  level:
    com.example.seckill.mapper: debug

server:
  port: 8080
# ===== 自定义swagger配置 ===== #
swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: springfox swagger 3.0 Demo
  try-host: http://localhost:${server.port}


